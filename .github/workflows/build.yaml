name: Build and Analyze

on:
  push:
    branches: [ main ]
    paths:
      - 'apps/api/**'
      - 'apps/landing/**'
      - 'apps/web/**'
      - 'packages/ui/**'
  pull_request:
    types: [ opened, synchronize, reopened ]

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      java: ${{ steps.filter.outputs.java }}
      ts: ${{ steps.filter.outputs.ts }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            java:
              - 'apps/api/src/**/*.java'
              - '**/*.java'
            ts:
              - 'apps/web/**/*.ts'
              - 'apps/web/**/*.tsx'
              - 'apps/landing/**/*.ts'
              - 'apps/landing/**/*.tsx'
              - 'packages/ui/**/*.ts'
              - 'packages/ui/**/*.tsx'

  build-java:
    needs: changes
    if: needs.changes.outputs.java == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'
      - name: Build with Maven
        run: mvn -B package -DskipTests --file apps/api/pom.xml
      - name: Test with Maven
        run: mvn -B test --file apps/api/pom.xml

  build-ts:
    needs: changes
    if: needs.changes.outputs.ts == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install
      - name: Build TypeScript projects
        run: pnpm build
      - name: Test TypeScript projects
        run: pnpm test

  sonar:
    needs: [ changes, build-java, build-ts ]
    if: |
      always() &&
      (needs.changes.result == 'success') &&
      (needs.build-java.result == 'success' || needs.build-java.result == 'skipped') &&
      (needs.build-ts.result == 'success' || needs.build-ts.result == 'skipped')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: SonarCloud Analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          if [ "${{ needs.changes.outputs.java }}" = "true" ]; then
            mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.organization=featherdotapp --file apps/api/pom.xml
          fi
          if [ "${{ needs.changes.outputs.ts }}" = "true" ]; then
            pnpm install
            pnpm sonar-scanner -Dsonar.organization=featherdotapp
          fi
